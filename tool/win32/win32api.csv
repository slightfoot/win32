ApiName, NeutralApiName, DllLibrary, WindowsPrototype, ReturnNative, ReturnDart, ParamCount, Param1Native, Param1Dart
ActivateActCtx, ActivateActCtx, kernel32, "BOOL ActivateActCtx(\n  HANDLE    hActCtx,\n  ULONG_PTR *lpCookie\n);", Int32, int, 2, hActCtx, IntPtr, int, lpCookie, Pointer<IntPtr>, Pointer<IntPtr>
AllocConsole, AllocConsole, kernel32, "BOOL WINAPI AllocConsole(void);", Int32, int, 0
AnimateWindow, AnimateWindow, user32, "BOOL AnimateWindow(\n  HWND  hWnd\n  DWORD dwTime,\n  DWORD dwFlags\n);", Int32, int, 3, hWnd, IntPtr, int, dwTime, Uint32, int, dwFlags, Uint32, int
AppendMenuW, AppendMenu, user32, "BOOL AppendMenuW(\n  HMENU    hMenu,\n  UINT     uFlags,\n  UINT_PTR uIDNewItem,\n  LPCWSTR  lpNewItem\n);", Int32, int, 4, hMenu, IntPtr, int, uFlags, Uint32, int, uIDNewItem, IntPtr, int, lpNewItem, Pointer<Utf16>, Pointer<Utf16>
AttachConsole, AttachConsole, kernel32, "BOOL WINAPI AttachConsole(\n  _In_ DWORD dwProcessId\n);", Int32, int, 1, dwProcessId, Uint32, int
Beep, Beep, kernel32, "BOOL Beep(\n  DWORD dwFreq,\n  DWORD dwDuration\n);", Int32, int, 2, dwFreq, Uint32, int, dwDuration, Uint32, int
BeginPaint, BeginPaint, user32, "HDC BeginPaint(\n  HWND          hWnd,\n  LPPAINTSTRUCT lpPaint\n);", IntPtr, int, 2, hWnd, IntPtr, int, lpPaint, Pointer<PAINTSTRUCT>, Pointer<PAINTSTRUCT>
BeginUpdateResourceW, BeginUpdateResource, kernel32, "HANDLE BeginUpdateResourceW(\n  LPCWSTR pFileName,\n  BOOL    bDeleteExistingResources\n);", IntPtr, int, 2, pFilename, Pointer<Utf16>, Pointer<Utf16>, bDeleteExistingResources, Int32, int
BluetoothAuthenticateDeviceEx, BluetoothAuthenticateDeviceEx, bthprops, "DWORD BluetoothAuthenticateDeviceEx(\n  HWND                        hwndParentIn,\n  HANDLE                      hRadioIn,\n  BLUETOOTH_DEVICE_INFO       *pbtdiInout,\n  PBLUETOOTH_OOB_DATA_INFO    pbtOobData,\n  AUTHENTICATION_REQUIREMENTS authenticationRequirement\n);", Uint32, int, 5, hwndParentIn, IntPtr, int, hRadioIn, IntPtr, int, pbtdiInout, Pointer<BLUETOOTH_DEVICE_INFO>, Pointer<BLUETOOTH_DEVICE_INFO>, pbtOobData, IntPtr, int, authenticationRequirement, Int32, int
BluetoothFindDeviceClose, BluetoothFindDeviceClose, bthprops, "BOOL BluetoothFindDeviceClose(\n  HBLUETOOTH_DEVICE_FIND hFind\n);", Int32, int, 1, hFind, IntPtr, int
BluetoothFindFirstDevice, BluetoothFindFirstDevice, bthprops, "HBLUETOOTH_DEVICE_FIND BluetoothFindFirstDevice(\n  const BLUETOOTH_DEVICE_SEARCH_PARAMS *pbtsp,\n  BLUETOOTH_DEVICE_INFO                *pbtdi\n);", Int32, int, 2, pbtsp, Pointer<BLUETOOTH_DEVICE_SEARCH_PARAMS>, Pointer<BLUETOOTH_DEVICE_SEARCH_PARAMS>, pbtdi, Pointer<BLUETOOTH_DEVICE_INFO>, Pointer<BLUETOOTH_DEVICE_INFO>
BluetoothFindFirstRadio, BluetoothFindFirstRadio, bthprops, "HBLUETOOTH_RADIO_FIND BluetoothFindFirstRadio(\n  const BLUETOOTH_FIND_RADIO_PARAMS *pbtfrp,\n  HANDLE                            *phRadio\n);", IntPtr, int, 2, pbtfrp, Pointer<BLUETOOTH_FIND_RADIO_PARAMS>, Pointer<BLUETOOTH_FIND_RADIO_PARAMS>, phRadio, Pointer<IntPtr>, Pointer<IntPtr>
BluetoothFindNextDevice, BluetoothFindNextDevice, bthprops, "BOOL BluetoothFindNextDevice(\n  HBLUETOOTH_DEVICE_FIND hFind,\n  BLUETOOTH_DEVICE_INFO  *pbtdi\n);", Int32, int, 2, hFind, IntPtr, int, pbtdi, Pointer<BLUETOOTH_DEVICE_INFO>, Pointer<BLUETOOTH_DEVICE_INFO>
BluetoothFindNextRadio, BluetoothFindNextRadio, bthprops, "BOOL BluetoothFindNextRadio(\n  HBLUETOOTH_RADIO_FIND hFind,\n  HANDLE                *phRadio\n);", Int32, int, 2, hFind, IntPtr, int, phRadio, Pointer<IntPtr>, Pointer<IntPtr>
BluetoothFindRadioClose, BluetoothFindRadioClose, bthprops, "BOOL BluetoothFindRadioClose(\n  HBLUETOOTH_RADIO_FIND hFind\n);", Int32, int, 1, hFind, IntPtr, int
BluetoothIsConnectable, BluetoothIsConnectable, bthprops, "BOOL BluetoothIsConnectable(\n  HANDLE hRadio\n);", Int32, int, 1, hRadio, IntPtr, int
BluetoothIsDiscoverable, BluetoothIsDiscoverable, bthprops, "BOOL BluetoothIsDiscoverable(\n  HANDLE hRadio\n);", Int32, int, 1, hRadio, IntPtr, int
BluetoothUpdateDeviceRecord, BluetoothUpdateDeviceRecord, bthprops, "DWORD BluetoothUpdateDeviceRecord(\n  const BLUETOOTH_DEVICE_INFO *pbtdi\n);", Uint32, int, 1, pbtdi, Pointer<BLUETOOTH_DEVICE_INFO>, Pointer<BLUETOOTH_DEVICE_INFO>
BringWindowToTop, BringWindowToTop, user32, "BOOL BringWindowToTop(\n  HWND hWnd\n);", Int32, int, 1, hWnd, IntPtr, int
CallNtPowerInformation, CallNtPowerInformation, powrprof, "NTSTATUS CallNtPowerInformation(\n  POWER_INFORMATION_LEVEL InformationLevel,\n  PVOID                   InputBuffer,\n  ULONG                   InputBufferLength,\n  PVOID                   OutputBuffer,\n  ULONG                   OutputBufferLength\n);", Int32, int, 5, InformationLevel, Int32, int, InputBuffer, Pointer, Pointer, InputBufferLength, Uint32, int, OutputBuffer, Pointer, Pointer, OutputBufferLength, Uint32, int
ChooseColorW, ChooseColor, comdlg32, "BOOL WINAPI ChooseColor(\n  _Inout_ LPCHOOSECOLOR lpcc\n);", Int32, int, 1, lpcc, Pointer<CHOOSECOLOR>, Pointer<CHOOSECOLOR>
ChooseFontW, ChooseFont, comdlg32, "BOOL WINAPI ChooseFont(\n  _Inout_ LPCHOOSEFONT lpcf\n);", Int32, int, 1, lpcf, Pointer<CHOOSEFONT>, Pointer<CHOOSEFONT>
CloseHandle, CloseHandle, kernel32, "BOOL CloseHandle(\n  HANDLE hObject\n);", Int32, int, 1, hObject, IntPtr, int
ClosePseudoConsole, ClosePseudoConsole, kernel32, "void WINAPI ClosePseudoConsole(\n    _In_ HPCON hPC\n);", Void, void, 1, hPC, Pointer<IntPtr>, Pointer<IntPtr>
CLSIDFromString, CLSIDFromString, ole32, "HRESULT CLSIDFromString(\n  LPCOLESTR lpsz,\n  LPCLSID   pclsid\n);", Int32, int, 2, lpsz, Pointer<Utf16>, Pointer<Utf16>, pclsid, Pointer<GUID>, Pointer<GUID>
CoCreateGuid, CoCreateGuid, ole32, "HRESULT CoCreateGuid(\n  GUID *pguid\n);", Int32, int, 1, pguid, Pointer<GUID>, Pointer<GUID>
CoCreateInstance, CoCreateInstance, ole32, "HRESULT CoCreateInstance(\n  REFCLSID  rclsid,\n  LPUNKNOWN pUnkOuter,\n  DWORD     dwClsContext,\n  REFIID    riid,\n  LPVOID    *ppv\n);", Int32, int, 5, rclsid, Pointer<GUID>, Pointer<GUID>, pUnkOuter, Pointer<IntPtr>, Pointer<IntPtr>, dwClsContext, Uint32, int, riid, Pointer<GUID>, Pointer<GUID>, ppv, Pointer<COMObject>, Pointer<COMObject>
CoGetClassObject, CoGetClassObject, ole32, "HRESULT CoGetClassObject(\n  REFCLSID rclsid,\n  DWORD    dwClsContext,\n  LPVOID   pvReserved,\n  REFIID   riid,\n  LPVOID   *ppv\n);", Int32, int, 5, rclsid, Pointer<GUID>, Pointer<GUID>, dwClsContext, Uint32, int, pvReserved, Pointer, Pointer, riid, Pointer<GUID>, Pointer<GUID>, ppv, Pointer<COMObject>, Pointer<COMObject>
CoInitializeEx, CoInitializeEx, ole32, "HRESULT CoInitializeEx(\n  LPVOID pvReserved,\n  DWORD  dwCoInit\n);", Int32, int, 2, pvReserved, Pointer<Void>, Pointer<Void>, dwCoInit, Uint32, int
CoInitializeSecurity, CoInitializeSecurity, ole32, "HRESULT CoInitializeSecurity(\n  PSECURITY_DESCRIPTOR        pSecDesc,\n  LONG                        cAuthSvc,\n  SOLE_AUTHENTICATION_SERVICE *asAuthSvc,\n  void                        *pReserved1,\n  DWORD                       dwAuthnLevel,\n  DWORD                       dwImpLevel,\n  void                        *pAuthList,\n  DWORD                       dwCapabilities,\n  void                        *pReserved3\n);", Int32, int, 9, pSecDesc, Pointer<SECURITY_DESCRIPTOR>, Pointer<SECURITY_DESCRIPTOR>, cAuthSvc, Int32, int, asAuthSvc, Pointer<SOLE_AUTHENTICATION_SERVICE>, Pointer<SOLE_AUTHENTICATION_SERVICE>, pReserved1, Pointer<Void>, Pointer<Void>, dwAuthnLevel, Uint32, int, dwImpLevel, Uint32, int, pAuthList, Pointer<Void>, Pointer<Void>, dwCapabilities, Uint32, int, pReserved3, Pointer<Void>, Pointer<Void>
CoSetProxyBlanket, CoSetProxyBlanket, ole32, "HRESULT CoSetProxyBlanket(\n  IUnknown                 *pProxy,\n  DWORD                    dwAuthnSvc,\n  DWORD                    dwAuthzSvc,\n  OLECHAR                  *pServerPrincName,\n  DWORD                    dwAuthnLevel,\n  DWORD                    dwImpLevel,\n  RPC_AUTH_IDENTITY_HANDLE pAuthInfo,\n  DWORD                    dwCapabilities\n);", Int32, int, 8, pProxy, Pointer, Pointer, dwAuthnSvc, Uint32, int, dwAuthzSvc, Uint32, int, pServerPrincName, Pointer<Utf16>, Pointer<Utf16>, dwAuthnLevel, Uint32, int, dwImpLevel, Uint32, int, pAuthInfo, Pointer<Void>, Pointer<Void>, dwCapabilities, Uint32, int
CoTaskMemFree, CoTaskMemFree, ole32, "void CoTaskMemFree(\n  _Frees_ptr_opt_ LPVOID pv\n);", Void, void, 1, pv, Pointer<Void>, Pointer<Void>
CoUninitialize, CoUninitialize, ole32, "void CoUninitialize();", Void, void, 0
CreateAcceleratorTableW, CreateAcceleratorTable, user32, "HACCEL CreateAcceleratorTableW(\n  LPACCEL paccel,\n  int     cAccel\n);", IntPtr, int, 2, paccel, Pointer, Pointer, cAccel, Int32, int
CreateConsoleScreenBuffer, CreateConsoleScreenBuffer, kernel32, "HANDLE WINAPI CreateConsoleScreenBuffer(\n  _In_             DWORD               dwDesiredAccess,\n  _In_             DWORD               dwShareMode,\n  _In_opt_   const SECURITY_ATTRIBUTES *lpSecurityAttributes,\n  _In_             DWORD               dwFlags,\n  _Reserved_       LPVOID              lpScreenBufferData\n);", IntPtr, int, 5, dwDesiredAccess, Uint32, int, dwShareMode, Uint32, int, lpSecurityAttributes, Pointer<SECURITY_ATTRIBUTES>, Pointer<SECURITY_ATTRIBUTES>, dwFlags, Uint32, int, lpScreenBufferData, Pointer, Pointer
CreateFileW, CreateFile, kernel32, "HANDLE CreateFileW(\n  LPCWSTR               lpFileName,\n  DWORD                 dwDesiredAccess,\n  DWORD                 dwShareMode,\n  LPSECURITY_ATTRIBUTES lpSecurityAttributes,\n  DWORD                 dwCreationDisposition,\n  DWORD                 dwFlagsAndAttributes,\n  HANDLE                hTemplateFile\n);", IntPtr, int, 7, lpFileName, Pointer<Utf16>, Pointer<Utf16>, dwDesiredAccess, Uint32, int, dwShareMode, Uint32, int, lpSecurityAttributes, Pointer<SECURITY_ATTRIBUTES>, Pointer<SECURITY_ATTRIBUTES>, dwCreationDisposition, Uint32, int, dwFlagsAndAttributes, Uint32, int, hTemplateFile, IntPtr, int
CreateFontIndirectW, CreateFontIndirect, gdi32, "HFONT CreateFontIndirectW(\n  const LOGFONTW *lplf\n);", IntPtr, int, 1, lplf, Pointer<LOGFONT>, Pointer<LOGFONT>
CreateMenu, CreateMenu, user32, "HMENU CreateMenu();", IntPtr, int, 0
CreatePipe, CreatePipe, kernel32, "BOOL CreatePipe(\n  PHANDLE               hReadPipe,\n  PHANDLE               hWritePipe,\n  LPSECURITY_ATTRIBUTES lpPipeAttributes,\n  DWORD                 nSize\n);", Int32, int, 4, hReadPipe, Pointer<IntPtr>, Pointer<IntPtr>, hWritePipe, Pointer<IntPtr>, Pointer<IntPtr>, lpPipeAttributes, Pointer<SECURITY_ATTRIBUTES>, Pointer<SECURITY_ATTRIBUTES>, nSize, Uint32, int
CreateProcessW, CreateProcess, kernel32, "BOOL CreateProcessW(\n  LPCWSTR               lpApplicationName,\n  LPWSTR                lpCommandLine,\n  LPSECURITY_ATTRIBUTES lpProcessAttributes,\n  LPSECURITY_ATTRIBUTES lpThreadAttributes,\n  BOOL                  bInheritHandles,\n  DWORD                 dwCreationFlags,\n  LPVOID                lpEnvironment,\n  LPCWSTR               lpCurrentDirectory,\n  LPSTARTUPINFOW        lpStartupInfo,\n  LPPROCESS_INFORMATION lpProcessInformation\n);", Int32, int, 10, lpApplicationName, Pointer<Utf16>, Pointer<Utf16>, lpCommandLine, Pointer<Utf16>, Pointer<Utf16>, lpProcessAttributes, Pointer<SECURITY_ATTRIBUTES>, Pointer<SECURITY_ATTRIBUTES>, lpThreadAttributes, Pointer<SECURITY_ATTRIBUTES>, Pointer<SECURITY_ATTRIBUTES>, bInheritHandles, Int32, int, dwCreationFlags, Uint32, int, lpEnvironment, Pointer, Pointer, lpCurrentDirectory, Pointer<Utf16>, Pointer<Utf16>, lpStartupInfo, Pointer, Pointer, lpProcessInformation, Pointer<PROCESS_INFORMATION>, Pointer<PROCESS_INFORMATION>
CreatePseudoConsole, CreatePseudoConsole, kernel32, "HRESULT WINAPI CreatePseudoConsole(\n  _In_ COORD size,\n  _In_ HANDLE hInput,\n  _In_ HANDLE hOutput,\n  _In_ DWORD dwFlags,\n  _Out_ HPCON* phPC\n);", Int32, int, 5, size, Int32, int, hInput, IntPtr, int, hOutput, IntPtr, int, dwFlags, Int32, int, phPC, Pointer<IntPtr>, Pointer<IntPtr>
CreateSolidBrush, CreateSolidBrush, gdi32, "HBRUSH CreateSolidBrush(\n  COLORREF color\n);", IntPtr, int, 1, color, Int32, int
CreateWindowExW, CreateWindowEx, user32, "HWND CreateWindowExW(\n  DWORD     dwExStyle,\n  LPCWSTR   lpClassName,\n  LPCWSTR   lpWindowName,\n  DWORD     dwStyle,\n  int       X,\n  int       Y,\n  int       nWidth,\n  int       nHeight,\n  HWND      hWndParent,\n  HMENU     hMenu,\n  HINSTANCE hInstance,\n  LPVOID    lpParam\n);", Int32, int, 12, dwExStyle, Uint32, int, lpClassName, Pointer<Utf16>, Pointer<Utf16>, lpWindowName, Pointer<Utf16>, Pointer<Utf16>, dwStyle, Uint32, int, X, Int32, int, Y, Int32, int, nWidth, Int32, int, nHeight, Int32, int, hWndParent, IntPtr, int, hMenu, IntPtr, int, hInstance, IntPtr, int, lpParam, Pointer<Void>, Pointer<Void>
CredDeleteW, CredDelete, advapi32, "BOOL CredDeleteW(\n  LPCWSTR TargetName,\n  DWORD   Type,\n  DWORD   Flags\n);", Int32, int, 3, TargetName, Pointer<Utf16>, Pointer<Utf16>, Type, Uint32, int, Flags, Uint32, int
CredFree, CredFree, advapi32, "void CredFree(\n  PVOID Buffer\n);", Void, void, 1, Buffer, Pointer, Pointer
CredReadW, CredRead, advapi32, "BOOL CredReadW(\n  LPCWSTR      TargetName,\n  DWORD        Type,\n  DWORD        Flags,\n  PCREDENTIALW *Credential\n);", Int32, int, 4, TargetName, Pointer<Utf16>, Pointer<Utf16>, Type, Uint32, int, Flags, Uint32, int, Credential, Pointer<Pointer<CREDENTIAL>>, Pointer<Pointer<CREDENTIAL>>
CredWriteW, CredWrite, advapi32, "BOOL CredWriteW(\n  PCREDENTIALW Credential,\n  DWORD        Flags\n);", Int32, int, 2, Credential, Pointer<CREDENTIAL>, Pointer<CREDENTIAL>, Flags, Uint32, int
DeactivateActCtx, DeactivateActCtx, kernel32, "BOOL DeactivateActCtx(\n  DWORD     dwFlags,\n  ULONG_PTR ulCookie\n);", Int32, int, 2, dwFlags, Uint32, int, ulCookie, IntPtr, int
DefWindowProcW, DefWindowProc, user32, "LRESULT LRESULT DefWindowProcW(\n  HWND   hWnd,\n  UINT   Msg,\n  WPARAM wParam,\n  LPARAM lParam\n);", IntPtr, int, 4, hWnd, IntPtr, int, Msg, Uint32, int, wParam, IntPtr, int, lParam, IntPtr, int
DeleteObject, DeleteObject, gdi32, "BOOL DeleteObject(\n  HGDIOBJ ho\n);", Int32, int, 1, ho, IntPtr, int
DestroyPhysicalMonitor, DestroyPhysicalMonitor, dxva2, "_BOOL DestroyPhysicalMonitor(\n  HANDLE hMonitor\n);", Int32, int, 1, hMonitor, IntPtr, int
DestroyPhysicalMonitors, DestroyPhysicalMonitors, dxva2, "_BOOL DestroyPhysicalMonitors(\n  DWORD              dwPhysicalMonitorArraySize,\n  LPPHYSICAL_MONITOR pPhysicalMonitorArray\n);", Int32, int, 2, dwPhysicalMonitorArraySize, Uint32, int, pPhysicalMonitorArray, Pointer, Pointer
DestroyWindow, DestroyWindow, user32, "BOOL DestroyWindow(\n  HWND hWnd\n);", Int32, int, 1, hWnd, IntPtr, int
DispatchMessageW, DispatchMessage, user32, "LRESULT DispatchMessage(\n  const MSG *lpMsg\n);", IntPtr, int, 1, lpMsg, Pointer<MSG>, Pointer<MSG>
DrawStatusTextW, DrawStatusText, comctl32, "void DrawStatusTextW(\n  HDC     hDC,\n  LPCRECT lprc,\n  LPCWSTR pszText,\n  UINT    uFlags\n);", Void, void, 4, hdc, IntPtr, int, lprc, Pointer<RECT>, Pointer<RECT>, pszText, Pointer<Utf16>, Pointer<Utf16>, uFlags, Uint32, int
DrawTextW, DrawText, user32, "int DrawTextW(\n  HDC     hdc,\n  LPCWSTR lpchText,\n  int     cchText,\n  LPRECT  lprc,\n  UINT    format\n);", Int32, int, 5, hdc, IntPtr, int, lpchText, Pointer<Utf16>, Pointer<Utf16>, cchText, Int32, int, lprc, Pointer<RECT>, Pointer<RECT>, format, Uint32, int
EnableMenuItem, EnableMenuItem, user32, "BOOL EnableMenuItem(\n  HMENU hMenu,\n  UINT  uIDEnableItem,\n  UINT  uEnable\n);", Int32, int, 3, hMenu, IntPtr, int, uIDEnableItem, Uint32, int, uEnable, Uint32, int
EndPaint, EndPaint, user32, "BOOL EndPaint(\n  HWND              hWnd,\n  const PAINTSTRUCT *lpPaint\n);", Int32, int, 2, hWnd, IntPtr, int, lpPaint, Pointer<PAINTSTRUCT>, Pointer<PAINTSTRUCT>
EndUpdateResourceW, EndUpdateResource, kernel32, "BOOL EndUpdateResourceW(\n  HANDLE hUpdate,\n  BOOL   fDiscard\n);", Int32, int, 2, hUpdate, IntPtr, int, fDiscard, Int32, int
EnumDisplayMonitors, EnumDisplayMonitors, user32, "BOOL EnumDisplayMonitors(\n  HDC             hdc,\n  LPCRECT         lprcClip,\n  MONITORENUMPROC lpfnEnum,\n  LPARAM          dwData\n);", Int32, int, 4, hdc, IntPtr, int, lprcClip, Pointer, Pointer, lpfnEnum, Pointer<NativeFunction>, Pointer<NativeFunction>, dwData, IntPtr, int
EnumFontFamiliesExW, EnumFontFamiliesEx, gdi32, "int EnumFontFamiliesExW(\n  HDC           hdc,\n  LPLOGFONTW    lpLogfont,\n  FONTENUMPROCW lpProc,\n  LPARAM        lParam,\n  DWORD         dwFlags\n);", Int32, int, 5, hdc, IntPtr, int, lpLogFont, Pointer<LOGFONT>, Pointer<LOGFONT>, lpProc, Pointer<NativeFunction>, Pointer<NativeFunction>, lParam, IntPtr, int, dwFlags, Uint32, int
EnumProcesses, EnumProcesses, psapi, "BOOL EnumProcesses(\n  DWORD   *lpidProcess,\n  DWORD   cb,\n  LPDWORD lpcbNeeded\n);", Int32, int, 3, lpidProcess, Pointer<Uint32>, Pointer<Uint32>, cb, Uint32, int, lpcbNeeded, Pointer<Uint32>, Pointer<Uint32>
EnumProcessModules, EnumProcessModules, psapi, "BOOL EnumProcessModules(\n  HANDLE  hProcess,\n  HMODULE *lphModule,\n  DWORD   cb,\n  LPDWORD lpcbNeeded\n);", Int32, int, 4, hProcess, IntPtr, int, lphModule, Pointer<IntPtr>, Pointer<IntPtr>, cb, Uint32, int, lpcbNeeded, Pointer<Uint32>, Pointer<Uint32>
EnumProcessModulesEx, EnumProcessModulesEx, psapi, "BOOL EnumProcessModulesEx(\n  HANDLE  hProcess,\n  HMODULE *lphModule,\n  DWORD   cb,\n  LPDWORD lpcbNeeded,\n  DWORD   dwFilterFlag\n);", Int32, int, 5, hProcess, IntPtr, int, lphModule, Pointer<IntPtr>, Pointer<IntPtr>, cb, Uint32, int, lpcbNeeded, Pointer<Uint32>, Pointer<Uint32>, dwFilterFlag, Uint32, int
EnumResourceNamesW, EnumResourceNames, kernel32, "BOOL EnumResourceNamesW(\n  HMODULE          hModule,\n  LPCWSTR          lpType,\n  ENUMRESNAMEPROCW lpEnumFunc,\n  LONG_PTR         lParam\n);", Int32, int, 4, hModule, IntPtr, int, lpType, Pointer<Utf16>, Pointer<Utf16>, lpEnumFunc, Pointer<NativeFunction>, Pointer<NativeFunction>, lParam, IntPtr, int
EnumResourceTypesW, EnumResourceTypes, kernel32, "BOOL EnumResourceTypesW(\n  HMODULE          hModule,\n  ENUMRESTYPEPROCW lpEnumFunc,\n  LONG_PTR         lParam\n);", Int32, int, 3, hModule, IntPtr, int, lpEnumFunc, Pointer<NativeFunction>, Pointer<NativeFunction>, lParam, IntPtr, int
EnumWindows, EnumWindows, user32, "BOOL EnumWindows(\n  WNDENUMPROC lpEnumFunc,\n  LPARAM      lParam\n);", Int32, int, 2, lpEnumFunc, Pointer<NativeFunction>, Pointer<NativeFunction>, lParam, IntPtr, int
FillConsoleOutputCharacterW, FillConsoleOutputCharacter, kernel32, "BOOL WINAPI FillConsoleOutputCharacter(\n  _In_  HANDLE  hConsoleOutput,\n  _In_  TCHAR   cCharacter,\n  _In_  DWORD   nLength,\n  _In_  COORD   dwWriteCoord,\n  _Out_ LPDWORD lpNumberOfCharsWritten\n);", Int32, int, 5, hConsoleOutput, IntPtr, int, cCharacter, Uint8, int, nLength, Uint32, int, dwWriteCoord, Int32, int, lpNumberOfCharsWritten, Pointer<Uint32>, Pointer<Uint32>
FillConsoleOutputAttribute, FillConsoleOutputAttribute, kernel32, "BOOL WINAPI FillConsoleOutputAttribute(\n  _In_  HANDLE  hConsoleOutput,\n  _In_  WORD    wAttribute,\n  _In_  DWORD   nLength,\n  _In_  COORD   dwWriteCoord,\n  _Out_ LPDWORD lpNumberOfAttrsWritten\n);", Int32, int, 5, hConsoleOutput, IntPtr, int, wAttribute, Uint16, int, nLength, Uint32, int, dwWriteCoord, Int32, int, lpNumberOfAttrsWritten, Pointer<Uint32>, Pointer<Uint32>
FillRect, FillRect, user32, "int FillRect(\n  HDC        hDC,\n  const RECT *lprc,\n  HBRUSH     hbr\n);", Int32, int, 3, hDC, IntPtr, int, lprc, Pointer<RECT>, Pointer<RECT>, hbr, IntPtr, int
FindExecutableW, FindExecutable, shell32, "HINSTANCE FindExecutableW(\n  LPCWSTR lpFile,\n  LPCWSTR lpDirectory,\n  LPWSTR  lpResult\n);", IntPtr, int, 3, lpFile, Pointer<Utf16>, Pointer<Utf16>, lpDirectory, Pointer<Utf16>, Pointer<Utf16>, lpResult, Pointer<Utf16>, Pointer<Utf16>
FindFirstVolumeW, FindFirstVolume, kernel32, "HANDLE FindFirstVolumeW(\n  LPWSTR lpszVolumeName,\n  DWORD  cchBufferLength\n);", IntPtr, int, 2, lpszVolumeName, Pointer<Utf16>, Pointer<Utf16>, cchBufferLength, Uint32, int
FindNextVolumeW, FindNextVolume, kernel32, "BOOL FindNextVolumeW(\n  HANDLE hFindVolume,\n  LPWSTR lpszVolumeName,\n  DWORD  cchBufferLength\n);", Int32, int, 3, hFindVolume, IntPtr, int, lpszVolumeName, Pointer<Utf16>, Pointer<Utf16>, cchBufferLength, Uint32, int
FindTextW, FindText, comdlg32, "HWND FindTextW(\n  LPFINDREPLACEW Arg1\n);", IntPtr, int, 1, Arg1, Pointer<FINDREPLACE>, Pointer<FINDREPLACE>
FindVolumeClose, FindVolumeClose, kernel32, "BOOL FindVolumeClose(\n  HANDLE hFindVolume\n);", Int32, int, 1, hFindVolume, IntPtr, int
FindWindowExW, FindWindowEx, user32, "HWND FindWindowExW(\n  HWND    hWndParent,\n  HWND    hWndChildAfter,\n  LPCWSTR lpszClass,\n  LPCWSTR lpszWindow\n);", IntPtr, int, 4, hWndParent, IntPtr, int, hWndChildAfter, IntPtr, int, lpszClass, Pointer<Utf16>, Pointer<Utf16>, lpszWindow, Pointer<Utf16>, Pointer<Utf16>
FlushConsoleInputBuffer, FlushConsoleInputBuffer, kernel32, "BOOL WINAPI FlushConsoleInputBuffer(\n  _In_ HANDLE hConsoleInput\n);", Int32, int, 1, hConsoleInput, IntPtr, int
FormatMessageW, FormatMessage, kernel32, "DWORD FormatMessageW(\n  DWORD   dwFlags,\n  LPCVOID lpSource,\n  DWORD   dwMessageId,\n  DWORD   dwLanguageId,\n  LPWSTR  lpBuffer,\n  DWORD   nSize,\n  va_list *Arguments\n);", Int32, int, 7, dwFlags, Uint32, int, lpSource, Pointer<Void>, Pointer<Void>, dwMessageId, Uint32, int, dwLanguageId, Uint32, int, lpBuffer, Pointer<Utf16>, Pointer<Utf16>, nSize, Uint32, int, arguments, Pointer, Pointer
FreeConsole, FreeConsole, kernel32, "BOOL WINAPI FreeConsole(void);", Int32, int, 0
FreeLibrary, FreeLibrary, kernel32, "BOOL FreeLibrary(\n  HMODULE hLibModule\n);", Int32, int, 1, hLibModule, IntPtr, int
GetClientRect, GetClientRect, user32, "BOOL GetClientRect(\n  HWND   hWnd,\n  LPRECT lpRect\n);", Int32, int, 2, hwnd, IntPtr, int, lpRect, Pointer<RECT>, Pointer<RECT>
GetComputerNameExW, GetComputerNameEx, kernel32, "BOOL GetComputerNameExW(\n  COMPUTER_NAME_FORMAT NameType,\n  LPWSTR               lpBuffer,\n  LPDWORD              nSize\n);", Int32, int, 3, NameType, Int32, int, lpBuffer, Pointer<Utf16>, Pointer<Utf16>, nSize, Pointer<Uint32>, Pointer<Uint32>
GetConsoleCursorInfo, GetConsoleCursorInfo, kernel32, "BOOL WINAPI GetConsoleCursorInfo(\n  _In_  HANDLE               hConsoleOutput,\n  _Out_ PCONSOLE_CURSOR_INFO lpConsoleCursorInfo\n);", Int32, int, 2, hConsoleOutput, IntPtr, int, lpConsoleCursorInfo, Pointer<CONSOLE_CURSOR_INFO>, Pointer<CONSOLE_CURSOR_INFO>
GetConsoleMode, GetConsoleMode, kernel32, "BOOL WINAPI GetConsoleMode(\n  _In_  HANDLE  hConsoleHandle,\n  _Out_ LPDWORD lpMode\n);", Int32, int, 2, hConsoleHandle, IntPtr, int, lpMode, Pointer<Uint32>, Pointer<Uint32>
GetConsoleScreenBufferInfo, GetConsoleScreenBufferInfo, kernel32, "BOOL WINAPI GetConsoleScreenBufferInfo(\n  _In_  HANDLE                      hConsoleOutput,\n  _Out_ PCONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo\n);", Int32, int, 2, hConsoleOutput, IntPtr, int, lpConsoleScreenBufferInfo, Pointer<CONSOLE_SCREEN_BUFFER_INFO>, Pointer<CONSOLE_SCREEN_BUFFER_INFO>
GetConsoleSelectionInfo, GetConsoleSelectionInfo, kernel32, "BOOL WINAPI GetConsoleSelectionInfo(\n  _Out_ PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo\n);", Int32, int, 1, lpConsoleSelectionInfo, Pointer<CONSOLE_SELECTION_INFO>, Pointer<CONSOLE_SELECTION_INFO>
GetConsoleTitleW, GetConsoleTitle, kernel32, "DWORD WINAPI GetConsoleTitle(\n  _Out_ LPTSTR lpConsoleTitle,\n  _In_  DWORD  nSize\n);", Uint32, int, 2, lpConsoleTitle, Pointer<Utf16>, Pointer<Utf16>, nSize, Uint32, int
GetConsoleWindow, GetConsoleWindow, kernel32, "HWND WINAPI GetConsoleWindow(void);", IntPtr, int, 0
GetDC, GetDC, user32, "HDC GetDC(\n  HWND hWnd\n);", IntPtr, int, 1, hwnd, IntPtr, int
GetDpiForMonitor, GetDpiForMonitor, shcore, "HRESULT GetDpiForMonitor(\n  HMONITOR         hmonitor,\n  MONITOR_DPI_TYPE dpiType,\n  UINT             *dpiX,\n  UINT             *dpiY\n  );", IntPtr, int, 4, hMonitor, IntPtr, int, dpiType, Int32, int, dpiX, Pointer<Int32>, Pointer<Int32>, dpiY, Pointer<Int32>, Pointer<Int32>
GetDpiForSystem, GetDpiForSystem, user32, "UINT GetDpiForSystem();", Int32, int, 0
GetForegroundWindow, GetForegroundWindow, user32, "HWND GetForegroundWindow();", IntPtr, int, 0
GetLargestConsoleWindowSize, GetLargestConsoleWindowSize, kernel32, "COORD WINAPI GetLargestConsoleWindowSize(\n  _In_ HANDLE hConsoleOutput\n);", Int32, int, 1, hConsoleOutput, IntPtr, int
GetLastError, GetLastError, kernel32, "_Post_equals_last_error_ DWORD GetLastError();", Uint32, int, 0
GetMessageW, GetMessage, user32, "BOOL GetMessageW(\n  LPMSG lpMsg,\n  HWND  hWnd,\n  UINT  wMsgFilterMin,\n  UINT  wMsgFilterMax\n);", Int32, int, 4, lpMsg, Pointer<MSG>, Pointer<MSG>, hWnd, IntPtr, int, wMsgFilterMin, Uint32, int, wMsgFilterMax, Uint32, int
GetModuleBaseNameW, GetModuleBaseName, psapi, "DWORD GetModuleBaseNameW(\n  HANDLE  hProcess,\n  HMODULE hModule,\n  LPWSTR  lpBaseName,\n  DWORD   nSize\n);", Uint32, int, 4, hProcess, IntPtr, int, hModule, IntPtr, int, lpBaseName, Pointer<Utf16>, Pointer<Utf16>, nSize, Uint32, int
GetModuleFileNameExW, GetModuleFileNameEx, psapi, "DWORD GetModuleFileNameExW(\n  HANDLE  hProcess,\n  HMODULE hModule,\n  LPWSTR  lpFilename,\n  DWORD   nSize\n);", Uint32, int, 4, hProcess, IntPtr, int, hModule, IntPtr, int, lpFilename, Pointer<Utf16>, Pointer<Utf16>, nSize, Uint32, int
GetModuleHandleW, GetModuleHandle, kernel32, "HMODULE GetModuleHandleW(\n  LPCWSTR lpModuleName\n);", IntPtr, int, 1, lpModuleName, Pointer<Utf16>, Pointer<Utf16>
GetMonitorBrightness, GetMonitorBrightness, dxva2, "_BOOL GetMonitorBrightness(\n  HANDLE  hMonitor,\n  LPDWORD pdwMinimumBrightness,\n  LPDWORD pdwCurrentBrightness,\n  LPDWORD pdwMaximumBrightness\n);", Int32, int, 4, hMonitor, IntPtr, int, pdwMinimumBrightness, Pointer<Uint32>, Pointer<Uint32>, pdwCurrentBrightness, Pointer<Uint32>, Pointer<Uint32>, pdwMaximumBrightness, Pointer<Uint32>, Pointer<Uint32>
GetMonitorCapabilities, GetMonitorCapabilities, dxva2, "_BOOL GetMonitorCapabilities(\n  HANDLE  hMonitor,\n  LPDWORD pdwMonitorCapabilities,\n  LPDWORD pdwSupportedColorTemperatures\n);", Int32, int, 3, hMonitor, IntPtr, int, pdwMonitorCapabilities, Pointer<Uint32>, Pointer<Uint32>, pdwSupportedColorTemperatures, Pointer<Uint32>, Pointer<Uint32>
GetMonitorColorTemperature, GetMonitorColorTemperature, dxva2, "_BOOL GetMonitorColorTemperature(\n  HANDLE                 hMonitor,\n  LPMC_COLOR_TEMPERATURE pctCurrentColorTemperature\n);", Int32, int, 2, hMonitor, IntPtr, int, pctCurrentColorTemperature, Pointer<Int32>, Pointer<Int32>
GetMonitorContrast, GetMonitorContrast, dxva2, "_BOOL GetMonitorContrast(\n  HANDLE  hMonitor,\n  LPDWORD pdwMinimumContrast,\n  LPDWORD pdwCurrentContrast,\n  LPDWORD pdwMaximumContrast\n);", Int32, int, 4, hMonitor, IntPtr, int, pdwMinimumContrast, Pointer<Uint32>, Pointer<Uint32>, pdwCurrentContrast, Pointer<Uint32>, Pointer<Uint32>, pdwMaximumContrast, Pointer<Uint32>, Pointer<Uint32>
GetMonitorDisplayAreaPosition, GetMonitorDisplayAreaPosition, dxva2, "_BOOL GetMonitorDisplayAreaPosition(\n  HANDLE           hMonitor,\n  MC_POSITION_TYPE ptPositionType,\n  LPDWORD          pdwMinimumPosition,\n  LPDWORD          pdwCurrentPosition,\n  LPDWORD          pdwMaximumPosition\n);", Int32, int, 5, hMonitor, IntPtr, int, ptPositionType, Int32, int, pdwMinimumPosition, Pointer<Uint32>, Pointer<Uint32>, pdwCurrentPosition, Pointer<Uint32>, Pointer<Uint32>, pdwMaximumPosition, Pointer<Uint32>, Pointer<Uint32>
GetMonitorDisplayAreaSize, GetMonitorDisplayAreaSize, dxva2, "_BOOL GetMonitorDisplayAreaSize(\n  HANDLE       hMonitor,\n  MC_SIZE_TYPE stSizeType,\n  LPDWORD      pdwMinimumWidthOrHeight,\n  LPDWORD      pdwCurrentWidthOrHeight,\n  LPDWORD      pdwMaximumWidthOrHeight\n);", Int32, int, 5, hMonitor, IntPtr, int, stSizeType, Int32, int, pdwMinimumWidthOrHeight, Pointer<Uint32>, Pointer<Uint32>, pdwCurrentWidthOrHeight, Pointer<Uint32>, Pointer<Uint32>, pdwMaximumWidthOrHeight, Pointer<Uint32>, Pointer<Uint32>
GetMonitorRedGreenOrBlueDrive, GetMonitorRedGreenOrBlueDrive, dxva2, "_BOOL GetMonitorRedGreenOrBlueDrive(\n  HANDLE        hMonitor,\n  MC_DRIVE_TYPE dtDriveType,\n  LPDWORD       pdwMinimumDrive,\n  LPDWORD       pdwCurrentDrive,\n  LPDWORD       pdwMaximumDrive\n);", Int32, int, 5, hMonitor, IntPtr, int, dtDriveType, Int32, int, pdwMinimumDrive, Pointer<Uint32>, Pointer<Uint32>, pdwCurrentDrive, Pointer<Uint32>, Pointer<Uint32>, pdwMaximumDrive, Pointer<Uint32>, Pointer<Uint32>
GetMonitorRedGreenOrBlueGain, GetMonitorRedGreenOrBlueGain, dxva2, "_BOOL GetMonitorRedGreenOrBlueGain(\n  HANDLE       hMonitor,\n  MC_GAIN_TYPE gtGainType,\n  LPDWORD      pdwMinimumGain,\n  LPDWORD      pdwCurrentGain,\n  LPDWORD      pdwMaximumGain\n);", Int32, int, 5, hMonitor, IntPtr, int, gtGainType, Int32, int, pdwMinimumGain, Pointer<Uint32>, Pointer<Uint32>, pdwCurrentGain, Pointer<Uint32>, Pointer<Uint32>, pdwMaximumGain, Pointer<Uint32>, Pointer<Uint32>
GetMonitorTechnologyType, GetMonitorTechnologyType, dxva2, "_BOOL GetMonitorTechnologyType(\n  HANDLE                       hMonitor,\n  LPMC_DISPLAY_TECHNOLOGY_TYPE pdtyDisplayTechnologyType\n);", Int32, int, 2, hMonitor, IntPtr, int, pdtyDisplayTechnologyType, Pointer<Int32>, Pointer<Int32>
GetMonitorInfoW, GetMonitorInfo, user32, "BOOL GetMonitorInfoW(\n  HMONITOR      hMonitor,\n  LPMONITORINFO lpmi\n);", Int32, int, 2, hMonitor, IntPtr, int, lpmi, Pointer<MONITORINFO>, Pointer<MONITORINFO>
GetNumberOfPhysicalMonitorsFromHMONITOR, GetNumberOfPhysicalMonitorsFromHMONITOR, dxva2, "_BOOL GetNumberOfPhysicalMonitorsFromHMONITOR(\n  HMONITOR hMonitor,\n  LPDWORD  pdwNumberOfPhysicalMonitors\n);", Int32, int, 2, hMonitor, IntPtr, int, pdwNumberOfPhysicalMonitors, Pointer<Uint32>, Pointer<Uint32>
GetObjectW, GetObject, gdi32, "int GetObject(\n  HANDLE h,\n  int    c,\n  LPVOID pv\n);", Int32, int, 3, h, IntPtr, int, c, Int32, int, pv, Pointer, Pointer
GetOpenFileNameW, GetOpenFileName, comdlg32, "BOOL GetOpenFileNameW(\n  LPOPENFILENAMEW Arg1\n);", Int32, int, 1, arg1, Pointer<OPENFILENAME>, Pointer<OPENFILENAME>
GetParent, GetParent, user32, "HWND GetParent(\n  HWND hWnd\n);", IntPtr, int, 1, hWnd, IntPtr, int
GetPhysicallyInstalledSystemMemory, GetPhysicallyInstalledSystemMemory, kernel32, "BOOL GetPhysicallyInstalledSystemMemory(\n  PULONGLONG TotalMemoryInKilobytes\n);", Int32, int, 1, TotalMemoryInKilobytes, Pointer<Uint64>, Pointer<Uint64>
GetPhysicalMonitorsFromHMONITOR, GetPhysicalMonitorsFromHMONITOR, dxva2, "_BOOL GetPhysicalMonitorsFromHMONITOR(\n  HMONITOR           hMonitor,\n  DWORD              dwPhysicalMonitorArraySize,\n  LPPHYSICAL_MONITOR pPhysicalMonitorArray\n);", Int32, int, 3, hMonitor, IntPtr, int, dwPhysicalMonitorArraySize, Uint32, int, pPhysicalMonitorArray, Pointer, Pointer
GetProcAddress, GetProcAddress, kernel32, "FARPROC GetProcAddress(\n  HMODULE hModule,\n  LPCSTR  lpProcName\n);", IntPtr, int, 2, hModule, IntPtr, int, lpProcName, Pointer<Uint8>, Pointer<Uint8>
GetProcessDpiAwareness, GetProcessDpiAwareness, shcore, "HRESULT GetProcessDpiAwareness(\n  HANDLE                hprocess,\n  PROCESS_DPI_AWARENESS *value\n);", IntPtr, int, 2, hprocess, IntPtr, int, value, Pointer<Int32>, Pointer<Int32>
GetProcessHeap, GetProcessHeap, kernel32, "HANDLE GetProcessHeap();", IntPtr, int, 0
GetProductInfo, GetProductInfo, kernel32, "BOOL GetProductInfo(\n  DWORD  dwOSMajorVersion,\n  DWORD  dwOSMinorVersion,\n  DWORD  dwSpMajorVersion,\n  DWORD  dwSpMinorVersion,\n  PDWORD pdwReturnedProductType\n);", Int32, int, 5, dwOSMajorVersion, Uint32, int, dwOSMinorVersion, Uint32, int, dwSpMajorVersion, Uint32, int, dwSpMinorVersion, Uint32, int, pdwReturnedProductType, Pointer<Uint32>, Pointer<Uint32>
GetSaveFileNameW, GetSaveFileName, comdlg32, "BOOL GetSaveFileNameW(\n  LPOPENFILENAMEW Arg1\n);", Int32, int, 1, arg1, Pointer<OPENFILENAME>, Pointer<OPENFILENAME>
GetScrollInfo, GetScrollInfo, user32, "BOOL GetScrollInfo(\n  HWND         hwnd,\n  int          nBar,\n  LPSCROLLINFO lpsi\n);", Int32, int, 3, hwnd, IntPtr, int, nBar, Int32, int, lpsi, Pointer<SCROLLINFO>, Pointer<SCROLLINFO>
GetShellWindow, GetShellWindow, user32, "HWND GetShellWindow();", IntPtr, int, 0
GetStdHandle, GetStdHandle, kernel32, "HANDLE WINAPI GetStdHandle(\n  _In_ DWORD nStdHandle\n);", IntPtr, int, 1, nStdHandle, Uint32, int
GetStockObject, GetStockObject, gdi32, "HGDIOBJ GetStockObject(\n  int i\n);", IntPtr, int, 1, i, Int32, int
GetSysColor, GetSysColor, user32, "DWORD GetSysColor(\n  int nIndex\n);", Uint32, int, 1, nIndex, Int32, int
GetSystemDpiForProcess, GetSystemDpiForProcess, user32, "UINT GetSystemDpiForProcess(\n  HANDLE hProcess\n);", Uint32, int, 1, hProcess, IntPtr, int
GetSystemMetrics, GetSystemMetrics, user32, "int GetSystemMetrics(\n  int nIndex\n);", Int32, int, 1, nIndex, Int32, int
GetSystemPowerStatus, GetSystemPowerStatus, kernel32, "BOOL GetSystemPowerStatus(\n  LPSYSTEM_POWER_STATUS lpSystemPowerStatus\n);", Int32, int, 1, lpSystemPowerStatus, Pointer<SYSTEM_POWER_STATUS>, Pointer<SYSTEM_POWER_STATUS>
GetSystemInfo, GetSystemInfo, kernel32, "void GetSystemInfo(\n  LPSYSTEM_INFO lpSystemInfo\n);", Void, void, 1, lpSystemInfo, Pointer<SYSTEM_INFO>, Pointer<SYSTEM_INFO>
GetTempPathW, GetTempPath, kernel32, "DWORD GetTempPathW(\n  DWORD  nBufferLength,\n  LPWSTR lpBuffer\n);", Uint32, int, 2, nBufferLength, Uint32, int, lpBuffer, Pointer<Utf16>, Pointer<Utf16>
GetTextMetricsW, GetTextMetrics, gdi32, "BOOL GetTextMetrics(\n  HDC          hdc,\n  LPTEXTMETRIC lptm\n);", Int32, int, 2, hdc, IntPtr, int, lptm, Pointer<TEXTMETRIC>, Pointer<TEXTMETRIC>
GetVersionExW, GetVersionEx, kernel32, "NOT_BUILD_WINDOWS_DEPRECATE BOOL GetVersionExW(\n  LPOSVERSIONINFOW lpVersionInformation\n);", Int32, int, 1, lpVersionInformation, Pointer<OSVERSIONINFO>, Pointer<OSVERSIONINFO>
GetVolumePathNamesForVolumeNameW, GetVolumePathNamesForVolumeName, kernel32, "BOOL GetVolumePathNamesForVolumeNameW(\n  LPCWSTR lpszVolumeName,\n  LPWCH   lpszVolumePathNames,\n  DWORD   cchBufferLength,\n  PDWORD  lpcchReturnLength\n);", Int32, int, 4, lpszVolumeName, Pointer<Utf16>, Pointer<Utf16>, lpszVolumePathNames, Pointer<Utf16>, Pointer<Utf16>, cchBufferLength, Uint32, int, lpcchReturnLength, Pointer<Uint32>, Pointer<Uint32>
GetWindow, GetWindow, user32, "HWND GetWindow(\n  HWND hWnd,\n  UINT uCmd\n);", IntPtr, int, 2, hWnd, IntPtr, int, uCmd, Uint32, int
HeapAlloc, HeapAlloc, kernel32, "DECLSPEC_ALLOCATOR LPVOID HeapAlloc(\n  HANDLE hHeap,\n  DWORD  dwFlags,\n  SIZE_T dwBytes\n);", Pointer, Pointer, 3, hHeap, IntPtr, int, dwflags, Uint32, int, dwBytes, Uint32, int
HeapFree, HeapFree, kernel32, "BOOL HeapFree(\n  HANDLE                 hHeap,\n  DWORD                  dwFlags,\n  _Frees_ptr_opt_ LPVOID lpMem\n);", Int32, int, 3, hHeap, IntPtr, int, dwFlags, Uint32, int, lpMem, Pointer, Pointer
InvalidateRect, InvalidateRect, user32, "BOOL InvalidateRect(\n  HWND       hWnd,\n  const RECT *lpRect,\n  BOOL       bErase\n);", Int32, int, 3, hWnd, IntPtr, int, lpRect, Pointer<RECT>, Pointer<RECT>, bErase, Int32, int
GetWindowTextW, GetWindowText, user32, "int GetWindowTextW(\n  HWND   hWnd,\n  LPWSTR lpString,\n  int    nMaxCount\n);", Int32, int, 3, hWnd, IntPtr, int, lpString, Pointer<Utf16>, Pointer<Utf16>, nMaxCount, Int32, int
GetWindowTextLengthW, GetWindowTextLength, user32, "int GetWindowTextLengthW(\n  HWND hWnd\n);", Int32, int, 1, hWnd, IntPtr, int
IIDFromString, IIDFromString, ole32, "HRESULT IIDFromString(\n  LPCOLESTR lpsz,\n  LPIID     lpiid\n);", Int32, int, 2, lpsz, Pointer<Utf16>, Pointer<Utf16>, lpiid, Pointer<GUID>, Pointer<GUID>
InitCommonControlsEx, InitCommonControlsEx, comctl32, "BOOL InitCommonControlsEx(\n  const INITCOMMONCONTROLSEX *picce\n);", Int32, int, 1, picce, Pointer<INITCOMMONCONTROLSEX>, Pointer<INITCOMMONCONTROLSEX>
InitializeProcThreadAttributeList, InitializeProcThreadAttributeList, kernel32, "BOOL InitializeProcThreadAttributeList(\n  LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,\n  DWORD                        dwAttributeCount,\n  DWORD                        dwFlags,\n  PSIZE_T                      lpSize\n);", Int32, int, 4, lpAttributeList, Pointer, Pointer, dwAttributeCount, Uint32, int, dwFlags, Uint32, int, lpSize, Pointer<IntPtr>, Pointer<IntPtr>
IsClipboardFormatAvailable, IsClipboardFormatAvailable, user32, "BOOL IsClipboardFormatAvailable(\n  UINT format\n);", Int32, int, 1, format, Uint32, int
IsDebuggerPresent, IsDebuggerPresent, kernel32, "BOOL IsDebuggerPresent();", Int32, int, 0
IsDialogMessageW, IsDialogMessage, user32, "BOOL IsDialogMessageW(\n  HWND  hDlg,\n  LPMSG lpMsg\n);", Int32, int, 2, hDlg, IntPtr, int, lpMsg, Pointer<MSG>, Pointer<MSG>
IsWindowVisible, IsWindowVisible, user32, "BOOL IsWindowVisible(\n  HWND hWnd\n);", Int32, int, 1, hWnd, IntPtr, int
KillTimer, KillTimer, user32, "BOOL KillTimer(\n  HWND     hWnd,\n  UINT_PTR uIDEvent\n);", Int32, int, 2, hWnd, IntPtr, int, uIDEvent, IntPtr, int
LineTo, LineTo, gdi32, "BOOL LineTo(\n  HDC hdc,\n  int x,\n  int y\n);", Int32, int, 3, hdc, IntPtr, int, x, Int32, int, y, Int32, int
LoadCursorW, LoadCursor, user32, "HCURSOR LoadCursorW(\n  HINSTANCE hInstance,\n  LPCWSTR   lpCursorName\n);", IntPtr, int, 2, hInstance, IntPtr, int, lpCursorName, Pointer<Utf16>, Pointer<Utf16>
LoadIconW, LoadIcon, user32, "HICON LoadIconW(\n  HINSTANCE hInstance,\n  LPCWSTR   lpIconName\n);", IntPtr, int, 2, hInstance, IntPtr, int, lpIconName, Pointer<Utf16>, Pointer<Utf16>
LoadLibraryW, LoadLibrary, kernel32, "HMODULE LoadLibraryW(\n  LPCWSTR lpLibFileName\n);", IntPtr, int, 1, lpLibFileName, Pointer<Utf16>, Pointer<Utf16>
LockWorkStation, LockWorkStation, user32, "BOOL LockWorkStation();", Int32, int, 0
MessageBoxW, MessageBox, user32, "int MessageBoxW(\n  HWND    hWnd,\n  LPCWSTR lpText,\n  LPCWSTR lpCaption,\n  UINT    uType\n);", Int32, int, 4, hWnd, IntPtr, int, lpText, Pointer<Utf16>, Pointer<Utf16>, lpCaption, Pointer<Utf16>, Pointer<Utf16>, uType, Uint32, int
MonitorFromPoint, MonitorFromPoint, user32, "HMONITOR MonitorFromPoint(\n  POINT pt,\n  DWORD dwFlags\n);", IntPtr, int, 2, pt, Int64, int, dwFlags, Uint32, int
MonitorFromWindow, MonitorFromWindow, user32, "HMONITOR MonitorFromWindow(\n  HWND  hwnd,\n  DWORD dwFlags\n);", IntPtr, int, 2, hwnd, IntPtr, int, dwFlags, Uint32, int
MoveWindow, MoveWindow, user32, "BOOL MoveWindow(\n  HWND hWnd,\n  int  X,\n  int  Y,\n  int  nWidth,\n  int  nHeight,\n  BOOL bRepaint\n);", Int32, int, 6, hWnd, IntPtr, int, X, Int32, int, Y, Int32, int, nWidth, Int32, int, nHeight, Int32, int, bRepaint, Int32, int
MoveToEx, MoveToEx, gdi32, "BOOL MoveToEx(\n  HDC     hdc,\n  int     x,\n  int     y,\n  LPPOINT lppt\n);", Int32, int, 4, hdc, IntPtr, int, x, Int32, int, y, Int32, int, lppt, Pointer<POINT>, Pointer<POINT>
MsgWaitForMultipleObjects, MsgWaitForMultipleObjects, user32, "DWORD MsgWaitForMultipleObjects(\n  DWORD        nCount,\n  const HANDLE *pHandles,\n  BOOL         fWaitAll,\n  DWORD        dwMilliseconds,\n  DWORD        dwWakeMask\n);", Uint32, int, 5, count, Uint32, int, pHandles, Pointer<IntPtr>, Pointer<IntPtr>, fWaitAll, Int32, int, dwMilliseconds, Uint32, int, dwWakeMask, Uint32, int
OpenProcess, OpenProcess, kernel32, "HANDLE OpenProcess(\n  DWORD dwDesiredAccess,\n  BOOL  bInheritHandle,\n  DWORD dwProcessId\n);", Int32, int, 3, dwDesiredAccess, Uint32, int, bInheritHandle, Int32, int, dwProcessId, Uint32, int
QueryDosDeviceW, QueryDosDevice, kernel32, "DWORD QueryDosDeviceW(\n  LPCWSTR lpDeviceName,\n  LPWSTR  lpTargetPath,\n  DWORD   ucchMax\n);", Uint32, int, 3, lpDeviceName, Pointer<Utf16>, Pointer<Utf16>, lpTargetPath, Pointer<Utf16>, Pointer<Utf16>, ucchMax, Uint32, int
QueryPerformanceCounter, QueryPerformanceCounter, kernel32, "BOOL QueryPerformanceCounter(\n  LARGE_INTEGER *lpPerformanceCount\n);", Int32, int, 1, lpPerformanceCount, Pointer<Int64>, Pointer<Int64>
QueryPerformanceFrequency, QueryPerformanceFrequency, kernel32, "BOOL QueryPerformanceFrequency(\n  LARGE_INTEGER *lpFrequency\n);", Int32, int, 1, lpPerformanceCount, Pointer<Int64>, Pointer<Int64>
PeekMessageW, PeekMessage, user32, "BOOL PeekMessageW(\n  LPMSG lpMsg,\n  HWND  hWnd,\n  UINT  wMsgFilterMin,\n  UINT  wMsgFilterMax,\n  UINT  wRemoveMsg\n);", Int32, int, 5, lpMsg, Pointer<MSG>, Pointer<MSG>, hWnd, IntPtr, int, wMsgFilterMin, Uint32, int, wMsgFilterMax, Uint32, int, wRemoveMsg, Uint32, int
ReadConsoleW, ReadConsole, kernel32, "BOOL WINAPI ReadConsole(\n  _In_     HANDLE  hConsoleInput,\n  _Out_    LPVOID  lpBuffer,\n  _In_     DWORD   nNumberOfCharsToRead,\n  _Out_    LPDWORD lpNumberOfCharsRead,\n  _In_opt_ LPVOID  pInputControl\n);", Int32, int, 5, hConsoleInput, IntPtr, int, lpBuffer, Pointer, Pointer, nNumberOfCharsToRead, Uint32, int, lpNumberOfCharsRead, Pointer<Uint32>, Pointer<Uint32>, pInputControl, Pointer, Pointer
ReadFile, ReadFile, kernel32, "BOOL ReadFile(\n  HANDLE       hFile,\n  LPVOID       lpBuffer,\n  DWORD        nNumberOfBytesToRead,\n  LPDWORD      lpNumberOfBytesRead,\n  LPOVERLAPPED lpOverlapped\n);", Int32, int, 5, hFile, IntPtr, int, lpBuffer, Pointer, Pointer, nNumberOfBytesToRead, Uint32, int, lpNumberOfBytesRead, Pointer<Uint32>, Pointer<Uint32>, lpOverlapped, Pointer, Pointer
ReadProcessMemory, ReadProcessMemory, kernel32, "BOOL ReadProcessMemory(\n  HANDLE  hProcess,\n  LPCVOID lpBaseAddress,\n  LPVOID  lpBuffer,\n  SIZE_T  nSize,\n  SIZE_T  *lpNumberOfBytesRead\n);", Int32, int, 5, hProcess, IntPtr, int, lpBaseAddress, Pointer<Void>, Pointer<Void>, lpBuffer, Pointer<Void>, Pointer<Void>, nSize, IntPtr, int, lpNumberOfBytesRead, Pointer<IntPtr>, Pointer<IntPtr>
RegCloseKey, RegCloseKey, advapi32, "LSTATUS RegCloseKey(\n  HKEY hKey\n);", Int32, int, 1, hKey, IntPtr, int
RegOpenKeyExW, RegOpenKeyEx, advapi32, "LSTATUS RegOpenKeyExW(\n  HKEY    hKey,\n  LPCWSTR lpSubKey,\n  DWORD   ulOptions,\n  REGSAM  samDesired,\n  PHKEY   phkResult\n);", Int32, int, 5, hKey, IntPtr, int, lpSubKey, Pointer<Utf16>, Pointer<Utf16>, ulOptions, Uint32, int, samDesired, Int32, int, phkResult, Pointer<IntPtr>, Pointer<IntPtr>
RegQueryValueExW, RegQueryValueEx, advapi32, "LSTATUS RegQueryValueExW(\n  HKEY    hKey,\n  LPCWSTR lpValueName,\n  LPDWORD lpReserved,\n  LPDWORD lpType,\n  LPBYTE  lpData,\n  LPDWORD lpcbData\n);", Int32, int, 6, hKey, IntPtr, int, lpValueName, Pointer<Utf16>, Pointer<Utf16>, lpReserved, Pointer<Uint32>, Pointer<Uint32>, lpType, Pointer<Uint32>, Pointer<Uint32>, lpData, Pointer<Uint8>, Pointer<Uint8>, lpcbData, Pointer<Uint32>, Pointer<Uint32>
RegisterClassW, RegisterClass, user32, "ATOM RegisterClassW(\n  const WNDCLASSW *lpWndClass\n);", Int16, int, 1, lpWndClass, Pointer<WNDCLASS>, Pointer<WNDCLASS>
RegisterWindowMessageW, RegisterWindowMessage, user32, "UINT RegisterWindowMessageW(\n  LPCWSTR lpString\n);", Uint32, int, 1, lpString, Pointer<Utf16>, Pointer<Utf16>
ReleaseDC, ReleaseDC, user32, "int ReleaseDC(\n  HWND hWnd,\n  HDC  hDC\n);", Int32, int, 2, hWnd, IntPtr, int, hDC, IntPtr, int
ReplaceTextW, ReplaceText, comdlg32, "HWND ReplaceTextW(\n  LPFINDREPLACEW Arg1\n);", IntPtr, int, 1, Arg1, Pointer<FINDREPLACE>, Pointer<FINDREPLACE>
ResizePseudoConsole, ResizePseudoConsole, kernel32, "HRESULT WINAPI ResizePseudoConsole(\n    _In_ HPCON hPC ,\n    _In_ COORD size\n);", Int32, int, 2, hPC, Pointer<IntPtr>, Pointer<IntPtr>, size, Int32, int
SaveCurrentMonitorSettings, SaveCurrentMonitorSettings, dxva2, "_BOOL SaveCurrentMonitorSettings(\n  HANDLE hMonitor\n);", Int32, int, 1, hMonitor, IntPtr, int
SaveDC, SaveDC, gdi32, "int SaveDC(\n  HDC hdc\n);", Int32, int, 1, hdc, IntPtr, int
ScrollConsoleScreenBufferW, ScrollConsoleScreenBuffer, kernel32, "BOOL WINAPI ScrollConsoleScreenBuffer(\n  _In_           HANDLE     hConsoleOutput,\n  _In_     const SMALL_RECT *lpScrollRectangle,\n  _In_opt_ const SMALL_RECT *lpClipRectangle,\n  _In_           COORD      dwDestinationOrigin,\n  _In_     const CHAR_INFO  *lpFill\n);", Int32, int, 5, hConsoleOutput, IntPtr, int, lpScrollRectangle, Pointer<SMALL_RECT>, Pointer<SMALL_RECT>, lpClipRectangle, Pointer<SMALL_RECT>, Pointer<SMALL_RECT>, dwDestinationOrigin, Int32, int, lpFill, Pointer<CHAR_INFO>, Pointer<CHAR_INFO>
ScrollWindow, ScrollWindow, user32, "BOOL ScrollWindow(\n  HWND       hWnd,\n  int        XAmount,\n  int        YAmount,\n  const RECT *lpRect,\n  const RECT *lpClipRect\n);", Int32, int, 5, hWnd, IntPtr, int, XAmount, Int32, int, YAmount, Int32, int, lpRect, Pointer<RECT>, Pointer<RECT>, lpClipRect, Pointer<RECT>, Pointer<RECT>
SendInput, SendInput, user32, "UINT SendInput(\n  UINT    cInputs,\n  LPINPUT pInputs,\n  int     cbSize\n);", Uint32, int, 3, cInputs, Uint32, int, pInputs, Pointer<Void>, Pointer<Void>, cbSize, Int32, int
SendMessageW, SendMessage, user32, "LRESULT SendMessage(\n  HWND   hWnd,\n  UINT   Msg,\n  WPARAM wParam,\n  LPARAM lParam\n);", IntPtr, int, 4, hWnd, IntPtr, int, Msg, Uint32, int, wParam, IntPtr, int, lParam, IntPtr, int
SetBkColor, SetBkColor, gdi32, "COLORREF SetBkColor(\n  HDC      hdc,\n  COLORREF color\n);", Int32, int, 2, hdc, IntPtr, int, color, Int32, int
SetBkMode, SetBkMode, gdi32, "int SetBkMode(\n  HDC hdc,\n  int mode\n);", Int32, int, 2, hdc, IntPtr, int, mode, Int32, int
SetConsoleCtrlHandler, SetConsoleCtrlHandler, kernel32, "BOOL WINAPI SetConsoleCtrlHandler(\n  _In_opt_ PHANDLER_ROUTINE HandlerRoutine,\n  _In_     BOOL             Add\n);", Int32, int, 2, HandlerRoutine, Pointer<NativeFunction>, Pointer<NativeFunction>, Add, Int32, int
SetConsoleCursorInfo, SetConsoleCursorInfo, kernel32, "BOOL WINAPI SetConsoleCursorInfo(\n  _In_       HANDLE              hConsoleOutput,\n  _In_ const CONSOLE_CURSOR_INFO *lpConsoleCursorInfo\n);", Int32, int, 2, hConsoleOutput, IntPtr, int, lpConsoleCursorInfo, Pointer<CONSOLE_CURSOR_INFO>, Pointer<CONSOLE_CURSOR_INFO>
SetConsoleCursorPosition, SetConsoleCursorPosition, kernel32, "BOOL WINAPI SetConsoleCursorPosition(\n  _In_ HANDLE hConsoleOutput,\n  _In_ COORD  dwCursorPosition\n);", Int32, int, 2, hConsoleOutput, IntPtr, int, dwCursorPosition, Int32, int
SetConsoleDisplayMode, SetConsoleDisplayMode, kernel32, "BOOL WINAPI SetConsoleDisplayMode(\n  _In_      HANDLE hConsoleOutput,\n  _In_      DWORD  dwFlags,\n  _Out_opt_ PCOORD lpNewScreenBufferDimensions\n);", Int32, int, 3, hConsoleOutput, IntPtr, int, dwFlags, Uint32, int, lpNewScreenBufferDimensions, Pointer<COORD>, Pointer<COORD>
SetConsoleMode, SetConsoleMode, kernel32, "BOOL WINAPI SetConsoleMode(\n  _In_ HANDLE hConsoleHandle,\n  _In_ DWORD  dwMode\n);", Int32, int, 2, hConsoleHandle, IntPtr, int, dwMode, Uint32, int
SetConsoleTextAttribute, SetConsoleTextAttribute, kernel32, "BOOL WINAPI SetConsoleTextAttribute(\n  _In_ HANDLE hConsoleOutput,\n  _In_ WORD   wAttributes\n);", Int32, int, 2, hConsoleOutput, IntPtr, int, wAttributes, Uint16, int
SetConsoleWindowInfo, SetConsoleWindowInfo, kernel32, "BOOL WINAPI SetConsoleWindowInfo(\n  _In_       HANDLE     hConsoleOutput,\n  _In_       BOOL       bAbsolute,\n  _In_ const SMALL_RECT *lpConsoleWindow\n);", Int32, int, 3, hConsoleOutput, IntPtr, int, bAbsolute, Int32, int, lpConsoleWindow, Pointer<SMALL_RECT>, Pointer<SMALL_RECT>
SetFocus, SetFocus, user32, "HWND SetFocus(\n  HWND hWnd\n);", IntPtr, int, 1, hWnd, IntPtr, int
SetMapMode, SetMapMode, gdi32, "int SetMapMode(\n  HDC hdc,\n  int iMode\n);", Int32, int, 2, hdc, IntPtr, int, iMode, Int32, int
SetMonitorBrightness, SetMonitorBrightness, dxva2, "_BOOL SetMonitorBrightness(\n  HANDLE hMonitor,\n  DWORD  dwNewBrightness\n);", Int32, int, 2, hMonitor, IntPtr, int, dwNewBrightness, Uint32, int
SetMonitorColorTemperature, SetMonitorColorTemperature, dxva2, "_BOOL SetMonitorColorTemperature(\n  HANDLE               hMonitor,\n  MC_COLOR_TEMPERATURE ctCurrentColorTemperature\n);", Int32, int, 2, hMonitor, IntPtr, int, ctCurrentColorTemperature, Int32, int
SetMonitorContrast, SetMonitorContrast, dxva2, "_BOOL SetMonitorContrast(\n  HANDLE hMonitor,\n  DWORD  dwNewContrast\n);", Int32, int, 2, hMonitor, IntPtr, int, dwNewContrast, Uint32, int
SetMonitorDisplayAreaPosition, SetMonitorDisplayAreaPosition, dxva2, "_BOOL SetMonitorDisplayAreaPosition(\n  HANDLE           hMonitor,\n  MC_POSITION_TYPE ptPositionType,\n  DWORD            dwNewPosition\n);", Int32, int, 3, hMonitor, IntPtr, int, ptPositionType, Int32, int, dwNewPosition, Uint32, int
SetMonitorDisplayAreaSize, SetMonitorDisplayAreaSize, dxva2, "_BOOL SetMonitorDisplayAreaSize(\n  HANDLE       hMonitor,\n  MC_SIZE_TYPE stSizeType,\n  DWORD        dwNewDisplayAreaWidthOrHeight\n);", Int32, int, 3, hMonitor, IntPtr, int, stSizeType, Int32, int, dwNewDisplayAreaWidthOrHeight, Uint32, int
SetMonitorRedGreenOrBlueDrive, SetMonitorRedGreenOrBlueDrive, dxva2, "_BOOL SetMonitorRedGreenOrBlueDrive(\n  HANDLE        hMonitor,\n  MC_DRIVE_TYPE dtDriveType,\n  DWORD         dwNewDrive\n);", Int32, int, 3, hMonitor, IntPtr, int, dtDriveType, Int32, int, dwNewDrive, Uint32, int
SetMonitorRedGreenOrBlueGain, SetMonitorRedGreenOrBlueGain, dxva2, "_BOOL SetMonitorRedGreenOrBlueGain(\n  HANDLE       hMonitor,\n  MC_GAIN_TYPE gtGainType,\n  DWORD        dwNewGain\n);", Int32, int, 3, hMonitor, IntPtr, int, gtGainType, Int32, int, dwNewGain, Uint32, int
SetParent, SetParent, user32, "HWND SetParent(\n  HWND hWndChild,\n  HWND hWndNewParent\n);", IntPtr, int, 2, hWndChild, IntPtr, int, hWndNewParent, IntPtr, int
SetScrollInfo, SetScrollInfo, user32, "int SetScrollInfo(\n  HWND          hwnd,\n  int           nBar,\n  LPCSCROLLINFO lpsi,\n  BOOL          redraw\n);", Int32, int, 4, hwnd, IntPtr, int, nBar, Int32, int, lpsi, Pointer<SCROLLINFO>, Pointer<SCROLLINFO>, redraw, Int32, int
SetProcessDPIAware, SetProcessDPIAware, user32, "BOOL SetProcessDPIAware();", Int32, int, 0
SetProcessDpiAwareness, SetProcessDpiAwareness, shcore, "HRESULT SetProcessDpiAwareness(\n  PROCESS_DPI_AWARENESS value\n);", IntPtr, int, 1, value, Int32, int
SetTextColor, SetTextColor, gdi32, "COLORREF SetTextColor(\n  HDC      hdc,\n  COLORREF color\n);", Int32, int, 2, hdc, IntPtr, int, color, Int32, int
SetTimer, SetTimer, user32, "UINT_PTR SetTimer(\n  HWND      hWnd,\n  UINT_PTR  nIDEvent,\n  UINT      uElapse,\n  TIMERPROC lpTimerFunc\n);", IntPtr, int, 4, hWnd, IntPtr, int, nIDEvent, IntPtr, int, uElapse, Uint32, int, lpTimerFunc, Pointer<NativeFunction>, Pointer<NativeFunction>
SetViewportExtEx, SetViewportExtEx, gdi32, "BOOL SetViewportExtEx(\n  HDC    hdc,\n  int    x,\n  int    y,\n  LPSIZE lpsz\n);", Int32, int, 4, hdc, IntPtr, int, x, Int32, int, y, Int32, int, lpsz, Pointer<SIZE>, Pointer<SIZE>
SetViewportOrgEx, SetViewportOrgEx, gdi32, "BOOL SetViewportOrgEx(\n  HDC     hdc,\n  int     x,\n  int     y,\n  LPPOINT lppt\n);", Int32, int, 4, hdc, IntPtr, int, x, Int32, int, y, Int32, int, lppt, Pointer<POINT>, Pointer<POINT>
SetWindowExtEx, SetWindowExtEx, gdi32, "BOOL SetWindowExtEx(\n  HDC    hdc,\n  int    x,\n  int    y,\n  LPSIZE lpsz\n);", Int32, int, 4, hdc, IntPtr, int, x, Int32, int, y, Int32, int, lpsz, Pointer<SIZE>, Pointer<SIZE>
SetWindowLongPtrW, SetWindowLongPtr, user32, "LONG_PTR SetWindowLongPtrW(\n  HWND     hWnd,\n  int      nIndex,\n  LONG_PTR dwNewLong\n);", IntPtr, int, 3, hWnd, IntPtr, int, nIndex, Int32, int, dwNewLong, IntPtr, int
SetWindowPos, SetWindowPos, user32, "BOOL SetWindowPos(\n  HWND hWnd,\n  HWND hWndInsertAfter,\n  int  X,\n  int  Y,\n  int  cx,\n  int  cy,\n  UINT uFlags,\n);", Int32, int, 7, hWnd, IntPtr, int, hWndInsertAfter, IntPtr, int, X, Int32, int, Y, Int32, int, cx, Int32, int, cy, Int32, int, uFlags, Uint32, int
SetWindowTextW, SetWindowText, user32, "BOOL SetWindowTextW(\n  HWND    hWnd,\n  LPCWSTR lpString\n);", Int32, int, 2, hWnd, IntPtr, int, lpString, Pointer<Utf16>, Pointer<Utf16>
SetForegroundWindow, SetForegroundWindow, user32, "BOOL SetForegroundWindow(\n  HWND    hWnd\n);", Int32, int, 1, hWnd, IntPtr, int
Shell_NotifyIconW, Shell_NotifyIcon, shell32, "BOOL Shell_NotifyIconW(\n  DWORD  dwMessage,\n  PNOTIFYICONDATAW lpData\n);", Int32, int, 2, dwMessage, Int32, int, lpData, Pointer<NOTIFYICONDATA>, Pointer<NOTIFYICONDATA>
ShellAboutW, ShellAbout, shell32, "INT ShellAboutW(\n  HWND    hWnd,\n  LPCWSTR szApp,\n  LPCWSTR szOtherStuff,\n  HICON   hIcon\n);", Int32, int, 4, hWnd, IntPtr, int, szApp, Pointer<Utf16>, Pointer<Utf16>, szOtherStuff, Pointer<Utf16>, Pointer<Utf16>, hIcon, IntPtr, int
ShellExecuteW, ShellExecute, shell32, "HINSTANCE ShellExecuteW(\n  HWND    hwnd,\n  LPCWSTR lpOperation,\n  LPCWSTR lpFile,\n  LPCWSTR lpParameters,\n  LPCWSTR lpDirectory,\n  INT     nShowCmd\n);", IntPtr, int, 6, hwnd, IntPtr, int, lpOperation, Pointer<Utf16>, Pointer<Utf16>, lpFile, Pointer<Utf16>, Pointer<Utf16>, lpParameters, Pointer<Utf16>, Pointer<Utf16>, lpDirectory, Pointer<Utf16>, Pointer<Utf16>, nShowCmd, Int32, int
ShellExecuteExW, ShellExecuteEx, shell32, "BOOL ShellExecuteExW(\n  SHELLEXECUTEINFOW *pExecInfo\n);", Int32, int, 1, pExecuteInfo, Pointer<SHELLEXECUTEINFO>, Pointer<SHELLEXECUTEINFO>
SHEmptyRecycleBinW, SHEmptyRecycleBin, shell32, "SHSTDAPI SHEmptyRecycleBinW(\n  HWND    hwnd,\n  LPCWSTR pszRootPath,\n  DWORD   dwFlags\n);", Int32, int, 3, hwnd, IntPtr, int, pszRootPath, Pointer<Utf16>, Pointer<Utf16>, dwFlags, Uint32, int
SHGetDiskFreeSpaceExW, SHGetDiskFreeSpaceEx, shell32, "BOOL SHGetDiskFreeSpaceExW(\n  LPCWSTR        pszDirectoryName,\n  ULARGE_INTEGER *pulFreeBytesAvailableToCaller,\n  ULARGE_INTEGER *pulTotalNumberOfBytes,\n  ULARGE_INTEGER *pulTotalNumberOfFreeBytes\n);", Int32, int, 4, pszDirectoryName, Pointer<Utf16>, Pointer<Utf16>, pulFreeBytesAvailableToCaller, Pointer<Uint64>, Pointer<Uint64>, pulTotalNumberOfBytes, Pointer<Uint64>, Pointer<Uint64>, pulTotalNumberOfFreeBytes, Pointer<Uint64>, Pointer<Uint64>
SHGetDriveMedia, SHGetDriveMedia, shell32, "HRESULT SHGetDriveMedia(\n  PCWSTR pszDrive,\n  DWORD  *pdwMediaContent\n);", Int32, int, 2, pszDrive, Pointer<Utf16>, Pointer<Utf16>, pdwMediaContent, Pointer<Uint32>, Pointer<Uint32>
SHGetFolderPathW, SHGetFolderPath, shell32, "SHFOLDERAPI SHGetFolderPathW(\n  HWND   hwnd,\n  int    csidl,\n  HANDLE hToken,\n  DWORD  dwFlags,\n  LPWSTR pszPath\n);", Int32, int, 5, hwnd, IntPtr, int, csidl, Int32, int, hToken, IntPtr, int, dwFlags, Uint32, int, pszPath, Pointer<Utf16>, Pointer<Utf16>
SHGetKnownFolderPath, SHGetKnownFolderPath, shell32, "HRESULT SHGetKnownFolderPath(\n  REFKNOWNFOLDERID rfid,\n  DWORD            dwFlags,\n  HANDLE           hToken,\n  PWSTR            *ppszPath\n);", Int32, int, 4, rfid, Pointer<GUID>, Pointer<GUID>, dwFlags, Uint32, int, hToken, IntPtr, int, ppszPath, Pointer<IntPtr>, Pointer<IntPtr>
ShowWindow, ShowWindow, user32, "BOOL ShowWindow(\n  HWND hWnd,\n  int  nCmdShow\n);", Int32, int, 2, hWnd, IntPtr, int, nCmdShow, Int32, int
ShowWindowAsync, ShowWindowAsync, user32, "BOOL ShowWindowAsync(\n  HWND hWnd,\n  int  nCmdShow\n);", Int32, int, 2, hWnd, IntPtr, int, nCmdShow, Int32, int
SHQueryRecycleBinW, SHQueryRecycleBin, shell32, "SHSTDAPI SHQueryRecycleBinW(\n  LPCWSTR         pszRootPath,\n  LPSHQUERYRBINFO pSHQueryRBInfo\n);", Int32, int, 2, pszRootPath, Pointer<Utf16>, Pointer<Utf16>, pSHQueryRBInfo, Pointer<SHQUERYRBINFO>, Pointer<SHQUERYRBINFO>
Sleep, Sleep, kernel32, "void Sleep(\n  DWORD dwMilliseconds\n);", Void, void, 1, dwMilliseconds, Uint32, int
StretchDIBits, StretchDIBits, gdi32, "int StretchDIBits(\n  HDC              hdc,\n  int              xDest,\n  int              yDest,\n  int              DestWidth,\n  int              DestHeight,\n  int              xSrc,\n  int              ySrc,\n  int              SrcWidth,\n  int              SrcHeight,\n  const VOID       *lpBits,\n  const BITMAPINFO *lpbmi,\n  UINT             iUsage,\n  DWORD            rop\n);", Int32, int, 13, hdc, IntPtr, int, xDest, Int32, int, yDest, Int32, int, DestWidth, Int32, int, DestHeight, Int32, int, xSrc, Int32, int, ySrc, Int32, int, SrcWidth, Int32, int, SrcHeight, Int32, int, lpBits, Pointer<Void>, Pointer<Void>, lpbmi, Pointer<BITMAPINFO>, Pointer<BITMAPINFO>, iUsage, Uint32, int, rop, Uint32, int
SystemParametersInfoW, SystemParametersInfo, user32, "BOOL SystemParametersInfoW(\n  UINT  uiAction,\n  UINT  uiParam,\n  PVOID pvParam,\n  UINT  fWinIni\n);", Int32, int, 4, uiAction, Uint32, int, uiParam, Uint32, int, pvParam, Pointer, Pointer, fWinIni, Uint32, int
TaskDialog, TaskDialog, comctl32, "HRESULT TaskDialog(\n  HWND                           hwndOwner,\n  HINSTANCE                      hInstance,\n  PCWSTR                         pszWindowTitle,\n  PCWSTR                         pszMainInstruction,\n  PCWSTR                         pszContent,\n  TASKDIALOG_COMMON_BUTTON_FLAGS dwCommonButtons,\n  PCWSTR                         pszIcon,\n  int                            *pnButton\n);", Int32, int, 8, hwndOwner, Int32, int, hInstance, Int32, int, pszWindowTitle, Pointer<Utf16>, Pointer<Utf16>, pszMainInstruction, Pointer<Utf16>, Pointer<Utf16>, pszContent, Pointer<Utf16>, Pointer<Utf16>, dwCommonButtons, Int32, int, pszIcon, Pointer<Utf16>, Pointer<Utf16>, pnButton, Pointer<Int32>, Pointer<Int32>
TaskDialogIndirect, TaskDialogIndirect, comctl32, "HRESULT TaskDialogIndirect(\n  const TASKDIALOGCONFIG *pTaskConfig,\n  int                    *pnButton,\n  int                    *pnRadioButton,\n  BOOL                   *pfVerificationFlagChecked\n);", Int32, int, 4, pTaskConfig, Pointer<TASKDIALOGCONFIG>, Pointer<TASKDIALOGCONFIG>, pnButton, Pointer<Int32>, Pointer<Int32>, pnRadioButton, Pointer<Int32>, Pointer<Int32>, pfVerificationFlagChecked, Pointer<Int32>, Pointer<Int32>
TextOutW, TextOut, gdi32, "BOOL TextOutW(\n  HDC     hdc,\n  int     x,\n  int     y,\n  LPCWSTR lpString,\n  int     c\n);", Int32, int, 5, hdc, IntPtr, int, x, Int32, int, y, Int32, int, lpString, Pointer<Utf16>, Pointer<Utf16>, c, Int32, int
TranslateAcceleratorW, TranslateAccelerator, user32, "int TranslateAcceleratorW(\n  HWND   hWnd,\n  HACCEL hAccTable,\n  LPMSG  lpMsg\n);", Int32, int, 3, hWnd, IntPtr, int, hAccTable, IntPtr, int, lpMsg, Pointer<MSG>, Pointer<MSG>
TranslateMessage, TranslateMessage, user32, "BOOL TranslateMessage(\n  const MSG *lpMsg\n);", Int32, int, 1, lpMsg, Pointer<MSG>, Pointer<MSG>
PostQuitMessage, PostQuitMessage, user32, "void PostQuitMessage(\n  int nExitCode\n);", Void, void, 1, nExitCode, Int32, int
UpdateProcThreadAttribute, UpdateProcThreadAttribute, kernel32, "BOOL UpdateProcThreadAttribute(\n  LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,\n  DWORD                        dwFlags,\n  DWORD_PTR                    Attribute,\n  PVOID                        lpValue,\n  SIZE_T                       cbSize,\n  PVOID                        lpPreviousValue,\n  PSIZE_T                      lpReturnSize\n);", Int32, int, 7, lpAttributeList, Pointer, Pointer, dwFlags, Uint32, int, Attribute, IntPtr, int, lpValue, Pointer, Pointer, cbSize, IntPtr, int, lpPreviousValue, Pointer, Pointer, lpReturnSize, Pointer<IntPtr>, Pointer<IntPtr>
UpdateResourceW, UpdateResource, kernel32, "BOOL UpdateResourceW(\n  HANDLE  hUpdate,\n  LPCWSTR lpType,\n  LPCWSTR lpName,\n  WORD    wLanguage,\n  LPVOID  lpData,\n  DWORD   cb\n);", Int32, int, 6, hUpdate, IntPtr, int, lpType, Pointer<Utf16>, Pointer<Utf16>, lpName, Pointer<Utf16>, Pointer<Utf16>, wLanguage, Uint16, int, lpData, Pointer, Pointer, cb, Uint32, int
UpdateWindow, UpdateWindow, user32, "BOOL UpdateWindow(\n  HWND hWnd\n);", Int32, int, 1, hWnd, IntPtr, int
VariantClear, VariantClear, oleaut32, "HRESULT VariantClear(\n  VARIANTARG *pvarg\n);", Int32, int, 1, pvarg, Pointer, Pointer
VirtualAlloc, VirtualAlloc, kernel32, "LPVOID VirtualAlloc(\n  LPVOID lpAddress,\n  SIZE_T dwSize,\n  DWORD  flAllocationType,\n  DWORD  flProtect\n);", Pointer<Void>, Pointer<Void>, 4, lpAddress, Pointer<Void>, Pointer<Void>, dwSize, IntPtr, int, flAllocationType, Uint32, int, flProtect, Uint32, int
VirtualFree, VirtualFree, kernel32, "BOOL VirtualFree(\n  LPVOID lpAddress,\n  SIZE_T dwSize,\n  DWORD  dwFreeType\n);", Int32, int, 3, lpAddress, Pointer<Void>, Pointer<Void>, dwSize, IntPtr, int, dwFreeType, Uint32, int
WindowFromPhysicalPoint, WindowFromPhysicalPoint, user32, "HWND WindowFromPhysicalPoint(\n  POINT Point\n);", IntPtr, int, 1, Point, Int64, int
WindowFromPoint, WindowFromPoint, user32, "HWND WindowFromPoint(\n  POINT Point\n);", IntPtr, int, 1, Point, Int64, int
WriteConsoleW, WriteConsole, kernel32, "BOOL WINAPI WriteConsole(\n  _In_             HANDLE  hConsoleOutput,\n  _In_       const VOID    *lpBuffer,\n  _In_             DWORD   nNumberOfCharsToWrite,\n  _Out_opt_        LPDWORD lpNumberOfCharsWritten,\n  _Reserved_       LPVOID  lpReserved\n);", Int32, int, 5, hConsoleOutput, IntPtr, int, lpBuffer, Pointer, Pointer, nNumberOfCharsToWrite, Uint32, int, lpNumberOfCharsWritten, Pointer<Uint32>, Pointer<Uint32>, lpReserved, Pointer, Pointer
WriteFile, WriteFile, kernel32, "BOOL WriteFile(\n  HANDLE       hFile,\n  LPCVOID      lpBuffer,\n  DWORD        nNumberOfBytesToWrite,\n  LPDWORD      lpNumberOfBytesWritten,\n  LPOVERLAPPED lpOverlapped\n);", Int32, int, 5, hFile, IntPtr, int, lpBuffer, Pointer, Pointer, nNumberOfBytesToWrite, Uint32, int, lpNumberOfBytesWritten, Pointer<Uint32>, Pointer<Uint32>, lpOverlapped, Pointer, Pointer
WriteProcessMemory, WriteProcessMemory, kernel32, "BOOL WriteProcessMemory(\n  HANDLE  hProcess,\n  LPVOID  lpBaseAddress,\n  LPCVOID lpBuffer,\n  SIZE_T  nSize,\n  SIZE_T  *lpNumberOfBytesWritten\n);", Int32, int, 5, hProcess, IntPtr, int, lpBaseAddress, Pointer<Void>, Pointer<Void>, lpBuffer, Pointer<Void>, Pointer<Void>, nSize, IntPtr, int, lpNumberOfBytesWritten, Pointer<IntPtr>, Pointer<IntPtr>
